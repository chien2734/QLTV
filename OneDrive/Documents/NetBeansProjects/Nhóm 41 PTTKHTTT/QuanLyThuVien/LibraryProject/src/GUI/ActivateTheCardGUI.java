/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.CardBUS;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import BLL.ReaderBUS;
import java.awt.Color;
import java.awt.Font;
import DTO.CardDTO;
import DTO.ReaderDTO;
import java.awt.Dimension;

/**
 *
 * @author HUY LONG
 */
public class ActivateTheCardGUI extends javax.swing.JPanel {

    private CardBUS cardBUS = new CardBUS();
    private ReaderBUS readerBUS = new ReaderBUS();
    private DefaultTableModel tableModel;
    private int indexSelected;
    private int nextId;

    /**
     * Creates new form ActivateTheCard
     */
    public ActivateTheCardGUI() {
        initComponents();
        setSize(new Dimension(this.getMaximumSize().width, this.getMaximumSize().height));
        this.tableTTChoKichHoat.getTableHeader().setFont(new Font("Roboto",1,20));
        this.tableTTChoKichHoat.getTableHeader().setBackground(new Color(187,222,251));
        this.tableTTChoKichHoat.setFont(new Font("Roboto",0,18));
        this.tableTTChoKichHoat.setRowHeight(50);
        
        this.txtTenDN.setEnabled(false);
        this.txtTenDG.setEnabled(false);
        this.txtSDT.setEnabled(false);
        this.txtEmail.setEnabled(false);
        this.txtDiaChi.setEnabled(false);
        this.txtNgayDK.setEnabled(false);
        this.btnKichHoat.setEnabled(false);
        this.jPopupMenu1.add(jMenuItem1);
        tableModel = (DefaultTableModel) tableTTChoKichHoat.getModel();
        loadDataIntoTable();
        indexSelected = -1;
        nextId = cardBUS.getAllCards().size() - 1;
        DisplayMenu displayMenu = new DisplayMenu();
        DisplayInformation displayInformation = new DisplayInformation();
        ActivatedAction activatedAction = new ActivatedAction();
        tableTTChoKichHoat.addMouseListener(displayMenu);
        jMenuItem1.addActionListener(displayInformation);
        btnKichHoat.addActionListener(activatedAction);
    }
    
    public void loadDataIntoTable() {
        ArrayList<CardDTO> listCard = cardBUS.getAllCards();
        ArrayList<ReaderDTO> listReader = readerBUS.getAllReaders();
        if (!listCard.isEmpty() && !listReader.isEmpty()) {
            for (int i = 0; i < listReader.size(); i++) {
                for (int j = 0; j < listCard.size(); j++) {
                    if (listReader.get(i).getTenDN().equals(listCard.get(j).getTenDN())) {
                        if (listCard.get(j).getMaTheMuon().startsWith("TM000")) {
                            Object[] data = new Object[]{listReader.get(i).getTenDN(),
                                listReader.get(i).getTenDG(), listReader.get(i).getEmail(),
                                listReader.get(i).getSDT(), listReader.get(i).getDiaChi(),
                                listCard.get(j).getNgayDK(), listCard.get(j).getMaTheMuon()};
                            tableModel.addRow(data);
                            tableModel.fireTableDataChanged();
                        } else {
                            Object[] data = new Object[]{listReader.get(i).getTenDN(),
                                listReader.get(i).getTenDG(), listReader.get(i).getEmail(),
                                listReader.get(i).getSDT(), listReader.get(i).getDiaChi(),
                                listCard.get(j).getNgayDK(), "Chưa có"};
                            tableModel.addRow(data);
                            tableModel.fireTableDataChanged();
                        }
                    }
                }
            }
        }
    }
    
    public void deleteDataInTable() {
        int soLuongDong = tableModel.getRowCount();
        if(soLuongDong != 0){
            for(int i = soLuongDong - 1;i>=0;i--){
                tableModel.removeRow(i);
                tableModel.fireTableDataChanged();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnKichHoat = new javax.swing.JButton();
        txtTenDN = new javax.swing.JTextField();
        txtTenDG = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtNgayDK = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTTChoKichHoat = new javax.swing.JTable();

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jMenuItem1.setText("Kích hoạt");

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tên đăng nhập:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(40, 50, 140, 30);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Tên độc giả:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(40, 140, 130, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Email:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(70, 230, 46, 25);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Số điện thoại:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(600, 40, 120, 50);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Địa chỉ:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(630, 140, 57, 25);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Ngày đăng ký:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(600, 230, 115, 25);

        btnKichHoat.setBackground(new java.awt.Color(153, 204, 255));
        btnKichHoat.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnKichHoat.setForeground(new java.awt.Color(255, 255, 255));
        btnKichHoat.setText("Kích hoạt");
        jPanel2.add(btnKichHoat);
        btnKichHoat.setBounds(470, 300, 140, 40);

        txtTenDN.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtTenDN.setSelectionColor(new java.awt.Color(0, 0, 0));
        txtTenDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDNActionPerformed(evt);
            }
        });
        jPanel2.add(txtTenDN);
        txtTenDN.setBounds(180, 40, 320, 50);

        txtTenDG.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(txtTenDG);
        txtTenDG.setBounds(180, 130, 320, 50);

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(txtEmail);
        txtEmail.setBounds(180, 220, 320, 50);

        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(txtSDT);
        txtSDT.setBounds(740, 40, 320, 50);

        txtDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(txtDiaChi);
        txtDiaChi.setBounds(740, 130, 320, 50);

        txtNgayDK.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jPanel2.add(txtNgayDK);
        txtNgayDK.setBounds(740, 220, 320, 50);

        add(jPanel2);
        jPanel2.setBounds(270, 10, 1090, 360);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chờ kích hoạt", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel1.setLayout(null);

        tableTTChoKichHoat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên đăng nhập", "Tên độc giả", "Email", "Số điện thoại", "Địa chỉ", "Ngày đăng ký", "Mã thẻ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableTTChoKichHoat);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 30, 1610, 520);

        add(jPanel1);
        jPanel1.setBounds(10, 372, 1640, 560);
    }// </editor-fold>//GEN-END:initComponents

    private void txtTenDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKichHoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableTTChoKichHoat;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNgayDK;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenDG;
    private javax.swing.JTextField txtTenDN;
    // End of variables declaration//GEN-END:variables
    private class DisplayMenu implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            if (e.isPopupTrigger()) {
                jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
            }
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }

    }

    private class DisplayInformation implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            indexSelected = tableTTChoKichHoat.getSelectedRow();
            if (indexSelected != -1) {
                txtTenDN.setText(tableModel.getValueAt(indexSelected, 0).toString());
                txtTenDG.setText(tableModel.getValueAt(indexSelected, 1).toString());
                txtEmail.setText(tableModel.getValueAt(indexSelected, 2).toString());
                txtSDT.setText(tableModel.getValueAt(indexSelected, 3).toString());
                txtDiaChi.setText(tableModel.getValueAt(indexSelected, 4).toString());
                Calendar currentDate = Calendar.getInstance();
                Date date = new Date(currentDate.getTimeInMillis());
                txtNgayDK.setText(date.toString());
                btnKichHoat.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(null,
                        "Vui lòng chọn 1 tài khoản để kích hoạt thẻ !!!");
            }
        }

    }
    
    private class ActivatedAction implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String maTheMuon = tableModel.getValueAt(indexSelected, 6).toString();
            if(maTheMuon.equals("Chưa có")){
                maTheMuon = "TM000" + ++nextId;
                String tenDN = txtTenDN.getText();
                String ngayDK = txtNgayDK.getText();
                System.out.println(ngayDK);
                CardDTO card = new CardDTO(maTheMuon, tenDN, Date.valueOf(ngayDK), 1);
                if(cardBUS.activatedCard(card).equals("Kích hoạt thành công !")){
                    JOptionPane.showMessageDialog(null, "Kích hoạt thành công, bạn có thể mượn sách !");
                    deleteDataInTable();
                    loadDataIntoTable();
                }else {
                    JOptionPane.showMessageDialog(null, cardBUS.activatedCard(card));
                }
            }else {
                JOptionPane.showMessageDialog(null, 
                        "Thẻ của bạn đã được kích hoạt !!!");
            }
        }
        
    }
}
