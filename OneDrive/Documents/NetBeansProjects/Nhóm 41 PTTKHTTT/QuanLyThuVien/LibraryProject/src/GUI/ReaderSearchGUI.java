/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import BLL.ReaderBUS;
import DTO.ReaderDTO;

/**
 *
 * @author HUY LONG
 */
public class ReaderSearchGUI extends javax.swing.JPanel {
    private ReaderBUS readerBUS = new ReaderBUS();
    private DefaultTableModel tableModel;
    /**
     * Creates new form ReaderSearch
     */
    public ReaderSearchGUI() {
        initComponents();
        setSize(new Dimension(this.getMaximumSize().width, this.getMaximumSize().height));
        this.tableReader.getTableHeader().setFont(new Font("Roboto",1,20));
        this.tableReader.getTableHeader().setBackground(new Color(187,222,251));
        this.tableReader.setFont(new Font("roboto",0,18));
        this.tableReader.setRowHeight(50);
        this.tableReader.setPreferredScrollableViewportSize(new Dimension(1600,600));
        tableModel = (DefaultTableModel) tableReader.getModel();
        this.txtXacNhan.setEnabled(false);
        this.txtMatKhau.setEnabled(false);
        this.buttonGroup1.add(rbtnKichHoat);
        this.buttonGroup1.add(rbtnKhongKichHoat);
        loadDataIntoTable(readerBUS.getAllReaders());
        SearchAction searchAction = new SearchAction();
        btnTimKiem.addActionListener(searchAction);
    }
    
    public void loadDataIntoTable(ArrayList<ReaderDTO> list) {
        if (!list.isEmpty()) {
            for (ReaderDTO reader : list) {
                Object[] data = new Object[]{reader.getTenDN(), reader.getMatKhau(),
                    reader.getTenDG(), reader.getSDT(), reader.getEmail(),
                    reader.getDiaChi(), reader.getTrangThai()};
                tableModel.addRow(data);
                tableModel.fireTableDataChanged();
            }
        }
    }

    public void deleteDataInTable() {
        int soLuongDong = tableReader.getRowCount();
        if (soLuongDong != 0) {
            for (int i = soLuongDong - 1; i >= 0; i--) {
                tableModel.removeRow(i);
                tableModel.fireTableDataChanged();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReader = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTenDN = new javax.swing.JTextField();
        txtTenDG = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        txtXacNhan = new javax.swing.JPasswordField();
        rbtnKichHoat = new javax.swing.JRadioButton();
        rbtnKhongKichHoat = new javax.swing.JRadioButton();
        cbbDiaChi = new javax.swing.JComboBox<>();
        btnTimKiem = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1600, 600));
        setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bảng thông tin độc giả", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel1.setLayout(null);

        tableReader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên đăng nhập", "Mật khẩu", "Tên độc giả", "SDT", "Email", "Địa chỉ", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableReader);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 1640, 480);

        add(jPanel1);
        jPanel1.setBounds(0, 0, 1667, 540);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tên đăng nhập:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(190, 40, 140, 25);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Mật khẩu:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(210, 100, 78, 25);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Xác nhận mật khẩu:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(170, 170, 155, 25);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tên độc giả:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(930, 40, 96, 25);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("SĐT:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(950, 100, 36, 25);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Email:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(950, 170, 46, 25);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Địa chỉ:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(950, 240, 57, 25);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Trạng thái:");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(210, 240, 83, 25);

        txtTenDN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtTenDN);
        txtTenDN.setBounds(350, 30, 350, 40);

        txtTenDG.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtTenDG);
        txtTenDG.setBounds(1080, 30, 290, 40);

        txtSDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtSDT);
        txtSDT.setBounds(1080, 90, 290, 40);

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtEmail);
        txtEmail.setBounds(1080, 160, 290, 40);

        txtMatKhau.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtMatKhau);
        txtMatKhau.setBounds(350, 90, 350, 40);

        txtXacNhan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel2.add(txtXacNhan);
        txtXacNhan.setBounds(350, 160, 350, 40);

        rbtnKichHoat.setBackground(new java.awt.Color(255, 255, 255));
        rbtnKichHoat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtnKichHoat.setText("Kích hoạt");
        jPanel2.add(rbtnKichHoat);
        rbtnKichHoat.setBounds(350, 240, 96, 30);

        rbtnKhongKichHoat.setBackground(new java.awt.Color(255, 255, 255));
        rbtnKhongKichHoat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rbtnKhongKichHoat.setText("Không được kích hoạt");
        jPanel2.add(rbtnKhongKichHoat);
        rbtnKhongKichHoat.setBounds(480, 240, 198, 30);

        cbbDiaChi.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cbbDiaChi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa chọn", "Hà Giang", "Cao Bằng", "Lào Cai", "Sơn La", "Lai Châu", "Bắc Kạn", "Lạng Sơn", "Tuyên Quang", "Yên Bái", "Thái Nguyên", "Điện Biên", "Phú Thọ", "Vĩnh Phúc", "Bắc Giang", "Bắc Ninh", "Hà Nội", "Quảng Ninh", "Hải Dương", "Hải Phòng", "Hòa Bình", "Hưng Yên", "Hà Nam", "Thái Bình", "Nam Định", "Ninh Bình", "Thanh Hóa", "Nghệ An", "Hà Tĩnh", "Quảng Bình", "Quảng Trị", "Thừa Thiên Huế", "Đà Nẵng", "Quảng Nam", "Quảng Ngãi", "KonTum", "Gia Lai", "Bình Định ", "Phú Yên", "Đắk Lắk", "Khánh Hòa", "Đắk Nông", "Lâm Đồng", "Ninh Thuận", "Bình Phước", "Tây Nguyên", "Bình Dương", "Đồng Nai", "Bình Thuận", "TP.Hồ Chí Minh", "Long An", "Bà Rịa - Vũng Tàu", "Đồng Tháp", "An Giang", "Tiền Giang", "Vĩnh Long", "Bến Tre", "Cần Thơ", "Kiên Giang", "Trà Vinh", "Hậu Giang", "Sóc Trăng", "Bạc Liêu", "Cà Mau" }));
        jPanel2.add(cbbDiaChi);
        cbbDiaChi.setBounds(1080, 230, 290, 40);

        btnTimKiem.setBackground(new java.awt.Color(153, 204, 255));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setText("Tìm kiếm");
        jPanel2.add(btnTimKiem);
        btnTimKiem.setBounds(770, 300, 140, 37);

        add(jPanel2);
        jPanel2.setBounds(10, 550, 1640, 390);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbbDiaChi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtnKhongKichHoat;
    private javax.swing.JRadioButton rbtnKichHoat;
    private javax.swing.JTable tableReader;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenDG;
    private javax.swing.JTextField txtTenDN;
    private javax.swing.JPasswordField txtXacNhan;
    // End of variables declaration//GEN-END:variables
    //Class implements ActionListener để thực hiện hành động bấm nút tìm kiếm
    private class SearchAction implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            String tenDN = txtTenDN.getText().trim();
            String tenDG = txtTenDG.getText().trim();
            int trangThai = -1;
            if(rbtnKichHoat.isSelected()){
                trangThai = 1;
            }else if(rbtnKhongKichHoat.isSelected()){
                trangThai = 0;
            }
            
            String SDT = txtSDT.getText().trim();
            String email = txtEmail.getText().trim();
            String diaChi = cbbDiaChi.getSelectedItem().toString();
            if(tenDN.isEmpty()&&tenDG.isEmpty()&&trangThai == -1
                    &&SDT.isEmpty()&&email.isEmpty()
                    &&diaChi.equals("Chưa chọn")){
                JOptionPane.showMessageDialog(null, 
                        "Hãy nhập thông tin cần tìm kiếm !!!");
            }else {
                String condition = "";
                if(!tenDN.isEmpty()){
                    if(condition.isEmpty()){
                        condition+="TENDN LIKE '%" + tenDN + "%' ";
                    }else {
                        condition +="AND TENDN LIKE '%" + tenDN + "%' ";
                    }
                }
                
                if(!tenDG.isEmpty()){
                    if(condition.isEmpty()){
                        condition+="TenDG LIKE  N'%" + tenDG + "%' ";
                    }else {
                        condition +="AND TenDG LIKE N'% " + tenDG +"%' ";
                    }
                }
                
                if(trangThai != -1) {
                    if(condition.isEmpty()){
                        condition+="TrangThai = " + trangThai + " ";
                    }else {
                        condition +="AND TrangThai = " + trangThai + " ";
                    }
                }
                
                if(!SDT.isEmpty()){
                    if(condition.isEmpty()){
                        condition+="SDT LIKE '%" + SDT + "%' ";
                    }else {
                        condition +="AND SDT LIKE '%" + SDT + "%' ";
                    }
                }
                
                if(!email.isEmpty()){
                    if(condition.isEmpty()){
                        condition+="Email LIKE '%" + email + "%' ";
                    }else {
                        condition +="AND TENDN LIKE '%" + email +"%' ";
                    }
                }
                
                if(!diaChi.equals("Chưa chọn")){
                    if(condition.isEmpty()){
                        condition+="DiaChi = N'" + diaChi + "' ";
                    }else {
                        condition +="AND DiaChi = N'" + diaChi + "' ";
                    }
                }
                
                ArrayList<ReaderDTO> list = readerBUS.getReadersByCondition(condition);
                if(list.isEmpty()){
                    deleteDataInTable();
                    JOptionPane.showMessageDialog(null, 
                            "Không tìm thấy !!!");
                }else {
                    deleteDataInTable();
                    loadDataIntoTable(list);
                }
            }
        }
        
    }
}
